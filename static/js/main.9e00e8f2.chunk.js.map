{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isStarted","goodsToSort","start","setState","sortByAlph","sort","good1","good2","localeCompare","forceUpdate","sortByLength","length","sortReverse","reverse","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,GAAD,OAAMJ,IAHrB,EAMEK,MAAQ,WACN,EAAKC,SAAS,CAAEH,WAAW,KAP/B,EAUEI,WAAa,WACX,EAAKL,MAAME,YAAYI,MAAK,SAACC,EAAOC,GAClC,OAAOD,EAAME,cAAcD,MAG7B,EAAKE,eAfT,EAkBEC,aAAe,WACb,EAAKX,MAAME,YAAYI,MAAK,SAACC,EAAOC,GAClC,OAAQD,EAAMK,OAASJ,EAAMI,UAG/B,EAAKF,eAvBT,EA0BEG,YAAc,WACZ,OAAO,EAAKb,MAAME,YAAYY,WA3BlC,EA8BEC,MAAQ,WACN,EAAKX,SAAS,CAAEF,YAAY,GAAD,OAAMJ,MA/BrC,4CAkCE,WAAU,IAAD,OACCG,EAAce,KAAKhB,MAAnBC,UAER,OACE,sBAAKgB,UAAU,MAAf,UACE,4CAEGhB,EAWG,KATA,wBACEiB,KAAK,SACLC,QAAS,WACP,EAAKhB,SAHT,mBAaJF,EAEI,qCACE,6BACGe,KAAKhB,MAAME,YAAYkB,KAAI,SAAAC,GAAI,OAC9B,6BACGA,GADMA,QAKb,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKd,cAHT,iCASA,wBACEa,KAAK,SACLC,QAAS,WACP,EAAKR,gBAHT,4BASA,wBACEO,KAAK,SACLC,QAAS,WACP,EAAKN,cACL,EAAKH,eAJT,qBAUA,wBACEQ,KAAK,SACLC,QAAS,WACP,EAAKJ,SAHT,sBAUF,YAxGd,GAAyBO,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9e00e8f2.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isStarted: boolean,\n  goodsToSort: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    goodsToSort: [...goodsFromServer],\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  sortByAlph = () => {\n    this.state.goodsToSort.sort((good1, good2) => {\n      return good1.localeCompare(good2);\n    });\n\n    this.forceUpdate();\n  };\n\n  sortByLength = () => {\n    this.state.goodsToSort.sort((good1, good2) => {\n      return (good1.length - good2.length);\n    });\n\n    this.forceUpdate();\n  };\n\n  sortReverse = () => {\n    return this.state.goodsToSort.reverse();\n  };\n\n  reset = () => {\n    this.setState({ goodsToSort: [...goodsFromServer] });\n  };\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods list</h1>\n        {\n          !isStarted\n            ? (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.start();\n                }}\n              >\n                Start\n              </button>\n            )\n            : null\n        }\n\n        {\n          isStarted\n            ? (\n              <>\n                <ul>\n                  {this.state.goodsToSort.map(good => (\n                    <li key={good}>\n                      {good}\n                    </li>\n                  ))}\n                </ul>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.sortByAlph();\n                  }}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.sortByLength();\n                  }}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.sortReverse();\n                    this.forceUpdate();\n                  }}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.reset();\n                  }}\n                >\n                  Reset\n                </button>\n              </>\n            )\n            : null\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}